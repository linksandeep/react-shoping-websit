[{"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\index.js":"1","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\App.js":"2","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\updateList.jsx":"3","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\login.jsx":"4","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\deliveryDetails.jsx":"5","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\cart.jsx":"6","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\userRegister.jsx":"7","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\changePassword.jsx":"8","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\userLogin.jsx":"9","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\footer.jsx":"10","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\homePage.jsx":"11","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\generatePDF.js":"12","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\firebase.js":"13","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\AddItem.jsx":"14","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\landingPageHeader.jsx":"15","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\searchForUpdateListPage.jsx":"16","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\searchBar.jsx":"17","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\updateItem.jsx":"18"},{"size":159,"mtime":1684676332677,"results":"19","hashOfConfig":"20"},{"size":1134,"mtime":1684676332601,"results":"21","hashOfConfig":"20"},{"size":1321,"mtime":1684676332668,"results":"22","hashOfConfig":"20"},{"size":4376,"mtime":1684676332642,"results":"23","hashOfConfig":"20"},{"size":3549,"mtime":1684676332630,"results":"24","hashOfConfig":"20"},{"size":6368,"mtime":1684676332623,"results":"25","hashOfConfig":"20"},{"size":3626,"mtime":1684735413962,"results":"26","hashOfConfig":"20"},{"size":4922,"mtime":1684676332626,"results":"27","hashOfConfig":"20"},{"size":4174,"mtime":1684676332672,"results":"28","hashOfConfig":"20"},{"size":206,"mtime":1684676332634,"results":"29","hashOfConfig":"20"},{"size":339,"mtime":1684676332637,"results":"30","hashOfConfig":"20"},{"size":1858,"mtime":1684676332636,"results":"31","hashOfConfig":"20"},{"size":526,"mtime":1684676332633,"results":"32","hashOfConfig":"20"},{"size":2158,"mtime":1684676332599,"results":"33","hashOfConfig":"20"},{"size":2239,"mtime":1684676332639,"results":"34","hashOfConfig":"20"},{"size":5123,"mtime":1684676332647,"results":"35","hashOfConfig":"20"},{"size":5684,"mtime":1684676332645,"results":"36","hashOfConfig":"20"},{"size":1892,"mtime":1684676332659,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"19bd0p0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\index.js",[],["79","80"],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\App.js",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\updateList.jsx",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\login.jsx",["81","82","83","84"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./landingPageHeader\";\nimport {Redirect} from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport \"./Component.css\";\n\nfunction Login(){\n    \n    const [loginUserName, setUserName]= useState(\"\");\n    const [loginPassword, setPassword]= useState(\"\");\n\n    const [login, setLogin] = useState(false);\n\n    const[correctness, setCorrectness]= useState(false);\n\n    const[noAdmin, setNoAdmin]= useState(false);\n\n    function updatePassword(event){\n        if(noAdmin == true){\n            setNoAdmin(false);\n        }\n        if(correctness == true){\n            setCorrectness(false)\n        }\n        setPassword(event.target.value);\n    };\n\n    function updateUserName(event){\n        if(noAdmin == true){\n            setNoAdmin(false);\n        }\n        if(correctness == true){\n            setCorrectness(false)\n        }\n        setUserName(event.target.value);\n    };\n\n    function onLoad(){\n        const token = sessionStorage.getItem(\"admintoken\");\n        if(token == null){\n            setLogin(false);\n        }\n        else{\n            setLogin(true);\n        }\n    }\n\n    window.onload = onLoad;\n\n    function onSubmit(event){\n        event.preventDefault();\n        var user =  {\n            username: loginUserName,\n            password: loginPassword,\n        }\n        axios({\n            method: \"POST\",\n            data: user,\n            withCredentials: true,\n            url: \"/api1/admin/adminLogin\",\n        }).then((res) => {\n            if(res.data === \"success\"){\n                console.log(\"success\");\n                setLogin(true);\n                sessionStorage.setItem(\"admintoken\", \"jHsbakndcnjgoILCNOOL6514631d5as4cs5c16d\");\n                window.location.reload(false);\n            }\n            else if(res.data === \"noAdmin\"){\n                setNoAdmin(true);\n            }\n            else{\n                setCorrectness(true);\n                console.log(\"failed\")\n            }\n        });\n    };\n    \n    if(login === true){\n        console.log(login);\n        return <Redirect to=\"/updateList\" />\n    }\n    else{\n        return (\n            <div>\n                <Header />\n                <div className=\"login\">\n                    <h1 className=\"login-h1\">Admin Authentication</h1>\n                    <div className=\"login-form\">\n                        <Form>\n                            <Form.Group>\n                                <Form.Control \n                                    name=\"username\"\n                                    onChange={updateUserName}\n                                    type=\"text\" \n                                    placeholder=\"Enter Mobile Number\"\n                                    value = {loginUserName}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Control \n                                    name=\"password\"\n                                    onChange={updatePassword}\n                                    type=\"password\" \n                                    placeholder=\"Enter Password\"\n                                    value = {loginPassword}\n                                />\n                            </Form.Group>\n                            {correctness && (\n                                <div>\n                                    <p style={{color: \"red\"}}>Incorrect Password !!</p>\n                                </div>\n                            )}\n                            {noAdmin && (\n                                <div>\n                                    <p style={{color: \"red\"}}>You do not have admin privileges !!</p>\n                                </div>\n                            )}\n                            <Form.Group>\n                                <Button\n                                    className=\"outline-button\"\n                                    type=\"submit\"\n                                    onClick={onSubmit} \n                                >\n                                Log In\n                                </Button>\n                            </Form.Group>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login;","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\deliveryDetails.jsx",["85","86"],"import React, { useState } from 'react';\nimport Header from \"./landingPageHeader\"\nimport Pdf from \"./generatePDF.js\"\nimport {Form, Button} from \"react-bootstrap\"\nimport \"./Component.css\"\nimport \"./deliveryDetails.css\"\n\nfunction Details(){\n\n    /*const [address, setAdd] = useState(\"\");\n    const [number, setNum] = useState(\"\");\n    const [name, setName] = useState(\"\")\n    const [confirmed, setConf] = useState(false);\n\n    function updateName(event){\n        setName(event.target.value);\n        var nam = lz.compress(name);\n        localStorage.setItem(\"name\", nam)\n    }\n\n    function updateAddress(event){\n        setAdd(event.target.value)\n        var add = lz.compress(address)\n        localStorage.setItem(\"address\", add)\n    }\n\n    function updateNum(event){\n        setNum(event.target.value)\n        var num = lz.compress(number);\n        localStorage.setItem(\"phnum\", num);\n    }*/\n\n    function placeOrder(e){\n        e.preventDefault();\n    \n        Pdf();\n    }\n\n    return (\n        <div>\n            <Header />\n            {/*<h1 className=\"heading\">Enter Your Delivery Details</h1>\n            <div className=\"deliveryForm\">\n                <Form>\n                    <Form.Control \n                        name = \"Name\"\n                        type=\"text\" \n                        placeholder=\"Enter Full Name\" \n                        onChange={updateName}\n                        value={name}\n                    />\n                    <Form.Control \n                        name = \"address\"\n                        type=\"text\" \n                        placeholder=\"Enter Delivery Address\" \n                        onChange={updateAddress}\n                        value={address}\n                        as=\"textarea\" \n                        rows={5}\n                    />\n                    <Form.Control \n                        name = \"number\"\n                        type=\"text\" \n                        placeholder=\"Enter Mobile Number\" \n                        onChange={updateNum}\n                        value={number}\n                    />\n                    <Form.Label> *Only Cash On Delivery Is Available</Form.Label>\n                    {confirmed ?(\n                        <div>\n                            <h1 className=\"numberVerified\">Number Verified!</h1>\n                            <Button\n                            className=\"outline-button\"\n                            type=\"submit\"\n                            onClick = {placeOrder}\n                            >\n                            Place order and download reciept\n                            </Button>\n                        </div>\n                    ):(\n                        <div>\n                            <Button\n                            className=\"outline-button\"\n                            type=\"submit\"\n                            onClick = {placeOrder}\n                            >\n                            Send OTP\n                            </Button>\n                            <div id=\"recaptcha\"></div>\n                        </div>\n                    )\n                    }\n                   \n                </Form>\n                </div>*/}\n                <h1 className=\"head\">Order Placed Successfully !!</h1>\n                <Button\n                className=\"outline-button button\"\n                type=\"submit\"\n                onClick = {placeOrder}\n                >\n                Download Bill\n                </Button>\n        </div>\n\n    )\n}\n\n//onClick={() => Pdf()}\n\nexport default Details;","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\cart.jsx",["87","88"],"import React, { useState} from 'react';\nimport {Button, Form, Card} from \"react-bootstrap\"\nimport Header from \"./landingPageHeader\";\nimport { Link, Redirect } from 'react-router-dom'\nimport \"./cart.css\"\nimport axios from \"axios\"\nimport Pdf from \"./generatePDF.js\"\n\nfunction Cart(){\n\n    const [cart, setCart] = useState([]);\n    const [total, setTotal] = useState(\"\");\n    const [length, setLength] = useState(\"\");\n    const [redirect, setRedi] = useState(false);\n    const [placed, setplaced] = useState(false);\n    \n    function updateCart(){\n        var carts = JSON.parse(localStorage.getItem(\"itemsInCart\"));\n        if(carts == null){\n            var t = [];\n            localStorage.setItem(\"itemsInCart\", JSON.stringify(t))\n            carts = JSON.parse(localStorage.getItem(\"itemsInCart\"));\n        }\n        setCart(carts);\n    }\n\n  function getCart(){\n      const user = {\n          username: sessionStorage.getItem(\"username\"),\n      }\n      axios.post(\"/api1/user/getCart\", user)\n          .then(function(response){\n              console.log(response.data.cart);\n              const cart = response.data.cart;\n              localStorage.setItem(\"itemsInCart\", JSON.stringify(cart))\n      })\n  }\n    \n    function updateQuan(name){\n      return function(event){\n        var carts = JSON.parse(localStorage.getItem(\"itemsInCart\"));\n        var i;\n        for(i=0;i<carts.length;i++){\n          if(carts[i].itemName === name){\n            carts[i].quantity = event.target.value;\n            break\n          }\n        }\n        localStorage.setItem(\"itemsInCart\", JSON.stringify(carts));\n        const user = {\n          username: sessionStorage.getItem(\"username\"),\n          cart: carts\n        }\n        console.log(user);\n        axios.post(\"/api1/user/updateCart\", user)\n            .then(res => {\n                console.log(res);\n            }\n        );\n        updateCart();\n        calcTotal();\n      }\n    }\n\n    function removeItem(obj){\n      var carts = JSON.parse(localStorage.getItem(\"itemsInCart\"));\n      var i;\n      for(i=0;i<carts.length;i++){\n        if(carts[i].itemName === obj.itemName){\n          carts.splice(i,1);\n          break\n        }\n      }\n      localStorage.setItem(\"itemsInCart\", JSON.stringify(carts));\n      const user = {\n        username: sessionStorage.getItem(\"username\"),\n        cart: carts\n      }\n      console.log(user);\n      axios.post(\"/api1/user/updateCart\", user)\n          .then(res => {\n              console.log(res);\n          }\n      );\n      updateCart();\n      calcTotal();\n    }\n\n    function calcTotal(){\n      var carts = JSON.parse(localStorage.getItem(\"itemsInCart\"));\n      if(carts == null){\n        var t = [];\n        localStorage.setItem(\"itemsInCart\", JSON.stringify(t));\n        carts = JSON.parse(localStorage.getItem(\"itemsInCart\"));\n      }\n      var i,t=0;\n      var tq=0;\n      for(i=0;i<carts.length;i++){\n        t=t+(carts[i].itemPrice*carts[i].quantity);\n        tq = tq + Number(carts[i].quantity);\n      }\n      setTotal(t);\n      setLength(tq);\n    }\n\n    \n    window.onload = function() {\n      calcTotal();\n      updateCart();\n      var bool = sessionStorage.getItem(\"logout\");\n      if(bool){\n        getCart();\n      }\n    };\n\n    function placeOrder(){\n      var bool = sessionStorage.getItem(\"logout\")\n      if(bool){\n        Pdf();\n        setplaced(true);\n        const user = {\n          username: sessionStorage.getItem(\"username\"),\n          cart: []\n        }\n        console.log(user);\n        axios.post(\"/api1/user/updateCart\", user)\n            .then(res => {\n                console.log(res);\n            }\n        );\n      }\n      else{\n        setRedi(true);\n      }\n      \n    }\n    if(redirect){\n      return <Redirect to=\"/userLogin\" />\n    }\n    else if(placed){\n      return <Redirect to=\"/delivery\" />\n    }\n    else{\n      return (\n        <div>\n          <Header />\n          <div className=\"a\">\n            <h1 className=\"cartHeading\">Your Cart</h1>\n            <div className=\"cart\">\n              {    \n                cart.map((items, i) => {\n                  return (\n                      <div className=\"item-div\" >\n                        <Card className=\"cardf\" style={{ width: '20rem' }}>\n                          <Card.Img variant=\"top\" src={items.Url} />\n                          <Card.Body>\n                            <Card.Title className=\"item-name\">{items.itemName}</Card.Title>\n                            <Card.Text className=\"item-price\">\n                            {items.itemPrice*items.quantity}/-\n                            </Card.Text>\n                            <div className=\"item-details\">\n                                <label className=\"qty-label\">Qty: </label>\n                                <Form className=\"item-qty\">\n                                  <Form.Control\n                                    style={{width:\"60px\"}}\n                                    type=\"number\"\n                                    value={items.quantity}\n                                    onChange={updateQuan(items.itemName)}\n                                  />\n                                </Form>\n                                <Button \n                                  className=\"remove-button\"\n                                  variant=\"danger\"\n                                  onClick={()=> removeItem(items)}\n                                >\n                                  Remove\n                                </Button>\n                              </div>\n                          </Card.Body>\n                      </Card>\n                    </div>\n                    )\n                  })\n              }\n            </div>\n              <div className=\"subtotal-div\">\n                <div className=\"subtotal-headings\">\n                  <h1 className=\"subtotal-heading\">SubTotal ({length} item) : </h1>\n                  <h1 className=\"subtotal-price-heading\"> {total}/-</h1>\n                </div>\n                  <Button \n                    variant=\"warning\" \n                    size=\"lg\" \n                    block\n                    className=\"proceed-to-buy-button\"\n                    onClick={placeOrder}\n                  >\n                    PLace Your Order\n                  </Button>\n              </div>\n          </div>\n          </div>\n      );\n    }\n}\n\nexport default Cart","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\userRegister.jsx",["89"],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\changePassword.jsx",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\userLogin.jsx",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\footer.jsx",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\homePage.jsx",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\generatePDF.js",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\firebase.js",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\AddItem.jsx",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\landingPageHeader.jsx",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\searchForUpdateListPage.jsx",[],"C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\searchBar.jsx",["90","91"],"import React, { useState, useEffect} from 'react';\nimport axios from \"axios\";\nimport {Button,Form,Card} from \"react-bootstrap\"\nimport \"./searchBar.css\"\nimport \"./Component.css\"\n\nfunction Search(){\n    \n    const [item, setItem] = useState(\"\")\n    const [list, setList] = useState([]);\n    const [display, setDisplay] = useState(false);\n    const [classNames, setClassName]= useState(\"\");\n\n    function startStopAnimation(){\n        if(classNames === \"\"){\n            setClassName(\"iconAnimate\")\n        }\n        else{\n            setClassName(\"\");\n        }\n    };\n\n    /*function animationFinished(){\n        setClassName(\"\");\n    }*/\n\n    function getCart(){\n        const user = {\n            username: sessionStorage.getItem(\"username\"),\n        }\n        axios.post(\"/api1/user/getCart\", user)\n            .then(function(response){\n                console.log(response.data.cart);\n                const cart = response.data.cart;\n                localStorage.setItem(\"itemsInCart\", JSON.stringify(cart))\n        })\n    }\n    \n    function updateTemp(obj){\n        const detail = {\n            itemName: obj.itemName,\n            itemPrice: obj.itemPrice,\n            Url: obj.imgUrl,\n            quantity: \"1\",\n        }\n        var cart = JSON.parse(localStorage.getItem(\"itemsInCart\"));\n        var t = [];\n        if(cart==null){\n            localStorage.setItem(\"itemsInCart\", JSON.stringify(t))\n            cart = JSON.parse(localStorage.getItem(\"itemsInCart\"));\n        }\n        cart.push(detail);\n        localStorage.setItem(\"itemsInCart\", JSON.stringify(cart));\n        //console.log(cart);\n        const user = {\n            username: sessionStorage.getItem(\"username\"),\n            cart: cart\n        }\n        console.log(user);\n        axios.post(\"/api1/user/updateCart\", user)\n            .then(res => {\n                console.log(res);\n            }\n        );\n    }\n    \n    useEffect(() => {\n        const updateDisplay = async () => {\n            const {data} = await axios.get(\"/api1/items/get\");\n            setList(data)\n            setDisplay(!display);\n        }\n        var bool = sessionStorage.getItem(\"logout\");\n        console.log(bool);\n        if(bool){\n            getCart();\n        }\n        updateDisplay()\n    }, []);\n\n    function updateItem(event){\n        setItem(event.target.value);\n    }\n\n    const Speechrecognition = window.SpeechRecognition ||window.webkitSpeechRecognition;\n\n    const recognition = new Speechrecognition();\n\n    function recognizeSpeech(){\n\n        recognition.start();\n\n        recognition.onresult = function(event){\n            console.log(event);\n            const current = event.resultIndex;\n            const transcript = event.results[current][0].transcript;\n            setItem(transcript);\n        }\n        \n    }\n\n    return (\n        <div>\n            <Form>\n                <Form.Control\n                    className=\"home-page-search\"\n                    name=\"itemName\"\n                    onChange={updateItem}\n                    type=\"text\" \n                    placeholder=\"Search for an item ..\"\n                    value = {item}\n                />\n                </Form>\n                {/*<Button\n                    className=\"speech-recog-button simple-button\" \n                    onClick={recognizeSpeech}>\n                    <i className=\"fas fa-microphone\"></i>\n                </Button>}\n                */}\n                {display && (\n                    <div className=\"cards\">\n                            {list\n                                .filter( name  => name.itemName.toLowerCase().indexOf(item.toLowerCase()) > -1)\n                                .slice(0,9)\n                                .map((value, key) => {\n                                    return (\n                                        <div key={value._id} className=\"icards\">\n                                            <Card>\n                                                <Card.Img className=\"img\" variant=\"top\" src={value.imgUrl} alt=\"image\" />\n                                                <Card.Body>\n                                                    <Card.Title style={{fontSize: \"30px\"}} >{value.itemName}</Card.Title>\n                                                    <Card.Text><span>Price - </span>{value.itemPrice}<span>/-</span>  </Card.Text>\n                                                    <Button \n                                                        onClick={(event) => {\n                                                            startStopAnimation();\n                                                            updateTemp(value)\n                                                            setItem(\"\");\n                                                            event.preventDefault();\n                                                            }\n                                                        }\n                                                        type=\"submit\"\n                                                        className=\"add-to-cart-button outline-button\"\n                                                    >\n                                                    Add to cart\n                                                    </Button>\n                                                </Card.Body>\n                                            </Card>\n                                                    \n                                        </div>\n                                    );\n                                })\n                            }\n                        </div>\n                )}\n        </div>\n    )\n}\n\nexport default Search;","C:\\Users\\intel\\Desktop\\final Project\\ecom-webapp\\frontend\\src\\Components\\updateItem.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":20,"column":20,"nodeType":"98","messageId":"99","endLine":20,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":23,"column":24,"nodeType":"98","messageId":"99","endLine":23,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":30,"column":20,"nodeType":"98","messageId":"99","endLine":30,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":33,"column":24,"nodeType":"98","messageId":"99","endLine":33,"endColumn":26},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"104","line":4,"column":9,"nodeType":"102","messageId":"103","endLine":4,"endColumn":13},{"ruleId":"100","severity":1,"message":"105","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":96,"column":13,"nodeType":"102","messageId":"108","endLine":96,"endColumn":14},{"ruleId":"100","severity":1,"message":"109","line":56,"column":12,"nodeType":"102","messageId":"103","endLine":56,"endColumn":28},{"ruleId":"110","severity":1,"message":"111","line":79,"column":8,"nodeType":"112","endLine":79,"endColumn":10,"suggestions":"113"},{"ruleId":"100","severity":1,"message":"114","line":89,"column":14,"nodeType":"102","messageId":"103","endLine":89,"endColumn":29},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Link' is defined but never used.","no-redeclare","'t' is already defined.","redeclared","'changeVisibility' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'display'. Either include it or remove the dependency array. You can also do a functional update 'setDisplay(d => ...)' if you only need 'display' in the 'setDisplay' call.","ArrayExpression",["117"],"'recognizeSpeech' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [display]",{"range":"120","text":"121"},[2256,2258],"[display]"]